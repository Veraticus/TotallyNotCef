<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>net7.0</TargetFramework>
        <LangVersion>11.0</LangVersion>
        <Nullable>enable</Nullable>
        <Optimize>true</Optimize>
        <RuntimeIdentifier>win-x64</RuntimeIdentifier>

        <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
        <EnableWindowsTargeting>true</EnableWindowsTargeting>
        <FileVersion>1.0.0.3</FileVersion>
        <OutputPath>bin/$(Configuration)/</OutputPath>
        <OutputType>Exe</OutputType>
        <Platform>x64</Platform>
        <PlatformName>x64</PlatformName>
        <Platforms>x64</Platforms>
        <PlatformTarget>x64</PlatformTarget>
        <!--
            Run on a newer version of .Net if the specified version (.Net Core 3.1) is not installed
            https://github.com/dotnet/docs/issues/12237
        -->
        <RollForward>Major</RollForward>
        <SelfContained>false</SelfContained>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
        <DebugSymbols>false</DebugSymbols>
        <DebugType>none</DebugType>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(RuntimeIdentifier)' == 'win-x64' ">
        <DefineConstants>OS_IS_WINDOWS;$(DefineConstants)</DefineConstants>
    </PropertyGroup>

    <ItemGroup>
        <Compile Remove="bin\**" />
        <Compile Remove="obj\**" />
        <EmbeddedResource Remove="bin\**" />
        <EmbeddedResource Remove="obj\**" />
        <None Remove="bin\**" />
        <None Remove="obj\**" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Condition=" '$(Configuration)' == 'Debug' Or '$(RuntimeIdentifier)' == 'win-x64' " Include="CefSharp.OffScreen.NetCore" Version="112.3.0" />
        <PackageReference Condition=" '$(Configuration)' == 'Debug' Or '$(RuntimeIdentifier)' == 'linux-x64' " Include="PuppeteerSharp" Version="10.0.0" />
        <PackageReference Include="NetCoreServer" Version="7.0.0" />
    </ItemGroup>

    <Target Condition=" '$(RuntimeIdentifier)' == 'win-x64' " Name="DownloadExeFixer" AfterTargets="Publish">
        <DownloadFile
            Condition=" $([MSBuild]::IsOSPlatform('Linux')) And !Exists('$(MSBuildThisFileDirectory)/../gui_converter') "
            DestinationFolder="$(MSBuildThisFileDirectory)/../"
            SourceUrl="https://github.com/joshua-software-dev/SharpGuiConverter/releases/download/v1.0.0.0/gui_converter_linux_64.zip"
        />
        <DownloadFile
            Condition=" $([MSBuild]::IsOSPlatform('OSX')) And !Exists('$(MSBuildThisFileDirectory)/../gui_converter') "
            DestinationFolder="$(MSBuildThisFileDirectory)/../"
            SourceUrl="https://github.com/joshua-software-dev/SharpGuiConverter/releases/download/v1.0.0.0/gui_converter_macos10_10_64.zip"
        />
        <DownloadFile
            Condition=" $([MSBuild]::IsOSPlatform('Windows')) And !Exists('$(MSBuildThisFileDirectory)/../gui_converter.exe') "
            DestinationFolder="$(MSBuildThisFileDirectory)/../"
            SourceUrl="https://github.com/joshua-software-dev/SharpGuiConverter/releases/download/v1.0.0.0/gui_converter_win_64.zip"
        />
    </Target>

    <Target Condition=" '$(RuntimeIdentifier)' == 'win-x64' " Name="UnzipExeFixer" AfterTargets="DownloadExeFixer">
        <Unzip
            Condition=" Exists('$(MSBuildThisFileDirectory)/../gui_converter_linux_64.zip') "
            DestinationFolder="$(MSBuildThisFileDirectory)/../"
            SourceFiles="$(MSBuildThisFileDirectory)/../gui_converter_linux_64.zip"
        />
        <Unzip
            Condition=" Exists('$(MSBuildThisFileDirectory)/../gui_converter_macos10_10_64.zip') "
            DestinationFolder="$(MSBuildThisFileDirectory)/../"
            SourceFiles="$(MSBuildThisFileDirectory)/../gui_converter_macos10_10_64.zip"
        />
        <Unzip
            Condition=" Exists('$(MSBuildThisFileDirectory)/../gui_converter_win_64.zip') "
            DestinationFolder="$(MSBuildThisFileDirectory)/../"
            SourceFiles="$(MSBuildThisFileDirectory)/../gui_converter_win_64.zip"
        />
    </Target>

    <Target Condition=" '$(RuntimeIdentifier)' == 'win-x64' " Name="DeleteLeftoverZips" AfterTargets="UnzipExeFixer">
        <Delete Files="$(MSBuildThisFileDirectory)/../gui_converter_linux_64.zip;$(MSBuildThisFileDirectory)/../gui_converter_macos10_10_64.zip;$(MSBuildThisFileDirectory)/../gui_converter_win_64.zip" />
    </Target>

    <Target Condition=" '$(RuntimeIdentifier)' == 'win-x64' " Name="FixExeType" AfterTargets="DeleteLeftoverZips">
        <Exec
            Condition=" $([MSBuild]::IsOSPlatform('Linux')) Or $([MSBuild]::IsOSPlatform('OSX')) "
            Command=" chmod +x $(MSBuildThisFileDirectory)/../gui_converter &amp;&amp; $(MSBuildThisFileDirectory)/../gui_converter $(MSBuildThisFileDirectory)$(OutDir)publish/TotallyNotCef.exe"
            ConsoleToMSBuild="true"
            IgnoreExitCode="false"
            StandardErrorImportance="high"
            StandardOutputImportance="high"
        />
        <Exec
            Condition=" $([MSBuild]::IsOSPlatform('Windows')) "
            Command=" $(MSBuildThisFileDirectory)/../gui_converter.exe $(MSBuildThisFileDirectory)$(OutDir)publish/TotallyNotCef.exe"
            ConsoleToMSBuild="true"
            IgnoreExitCode="false"
            StandardErrorImportance="high"
            StandardOutputImportance="high"
        />
    </Target>

</Project>
